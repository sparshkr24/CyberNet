[{"D:\\Sparsh\\Projects\\DevConnector\\client\\src\\App.js":"1","D:\\Sparsh\\Projects\\DevConnector\\client\\src\\components\\layout\\Alert.js":"2","D:\\Sparsh\\Projects\\DevConnector\\client\\src\\components\\auth\\Register.js":"3","D:\\Sparsh\\Projects\\DevConnector\\client\\src\\utils\\setAuthToken.js":"4","D:\\Sparsh\\Projects\\DevConnector\\client\\src\\components\\routing\\PrivateRoute.js":"5","D:\\Sparsh\\Projects\\DevConnector\\client\\src\\components\\dashboard\\DashboardActions.js":"6","D:\\Sparsh\\Projects\\DevConnector\\client\\src\\components\\profile\\ProfileAbout.js":"7","D:\\Sparsh\\Projects\\DevConnector\\client\\src\\components\\post\\CommentForm.js":"8","D:\\Sparsh\\Projects\\DevConnector\\client\\src\\reducers\\post.js":"9","D:\\Sparsh\\Projects\\DevConnector\\client\\src\\components\\layout\\Navbar.js":"10","D:\\Sparsh\\Projects\\DevConnector\\client\\src\\actions\\post.js":"11","D:\\Sparsh\\Projects\\DevConnector\\client\\src\\actions\\profile.js":"12","D:\\Sparsh\\Projects\\DevConnector\\client\\src\\index.js":"13","D:\\Sparsh\\Projects\\DevConnector\\client\\src\\components\\profile-forms\\CreateProfile.js":"14","D:\\Sparsh\\Projects\\DevConnector\\client\\src\\components\\post\\CommentItem.js":"15","D:\\Sparsh\\Projects\\DevConnector\\client\\src\\components\\dashboard\\Education.js":"16","D:\\Sparsh\\Projects\\DevConnector\\client\\src\\components\\auth\\Login.js":"17","D:\\Sparsh\\Projects\\DevConnector\\client\\src\\components\\profiles\\Profiles.js":"18","D:\\Sparsh\\Projects\\DevConnector\\client\\src\\components\\layout\\Landing.js":"19","D:\\Sparsh\\Projects\\DevConnector\\client\\src\\components\\profiles\\ProfileItem.js":"20","D:\\Sparsh\\Projects\\DevConnector\\client\\src\\components\\profile-forms\\AddEducation.js":"21","D:\\Sparsh\\Projects\\DevConnector\\client\\src\\components\\profile-forms\\AddExperience.js":"22","D:\\Sparsh\\Projects\\DevConnector\\client\\src\\components\\profile\\ProfileTop.js":"23","D:\\Sparsh\\Projects\\DevConnector\\client\\src\\components\\profile-forms\\EditProfile.js":"24","D:\\Sparsh\\Projects\\DevConnector\\client\\src\\reducers\\profile.js":"25","D:\\Sparsh\\Projects\\DevConnector\\client\\src\\components\\posts\\PostForm.js":"26","D:\\Sparsh\\Projects\\DevConnector\\client\\src\\components\\posts\\PostItem.js":"27","D:\\Sparsh\\Projects\\DevConnector\\client\\src\\actions\\auth.js":"28","D:\\Sparsh\\Projects\\DevConnector\\client\\src\\store.js":"29"},{"size":4047,"mtime":1679916254963,"results":"30","hashOfConfig":"31"},{"size":511,"mtime":1679425465383,"results":"32","hashOfConfig":"31"},{"size":4695,"mtime":1679681868509,"results":"33","hashOfConfig":"31"},{"size":256,"mtime":1679425465395,"results":"34","hashOfConfig":"31"},{"size":688,"mtime":1679425465391,"results":"35","hashOfConfig":"31"},{"size":731,"mtime":1679425465383,"results":"36","hashOfConfig":"31"},{"size":1018,"mtime":1679425465390,"results":"37","hashOfConfig":"31"},{"size":1223,"mtime":1679425465387,"results":"38","hashOfConfig":"31"},{"size":2146,"mtime":1679425465394,"results":"39","hashOfConfig":"31"},{"size":2009,"mtime":1679913940187,"results":"40","hashOfConfig":"31"},{"size":4495,"mtime":1679425465381,"results":"41","hashOfConfig":"31"},{"size":6708,"mtime":1679425465382,"results":"42","hashOfConfig":"31"},{"size":146,"mtime":1679425465393,"results":"43","hashOfConfig":"31"},{"size":9198,"mtime":1679425465389,"results":"44","hashOfConfig":"31"},{"size":1589,"mtime":1679425465387,"results":"45","hashOfConfig":"31"},{"size":1660,"mtime":1679425465383,"results":"46","hashOfConfig":"31"},{"size":2656,"mtime":1679682044590,"results":"47","hashOfConfig":"31"},{"size":1620,"mtime":1679914729535,"results":"48","hashOfConfig":"31"},{"size":1371,"mtime":1679916267263,"results":"49","hashOfConfig":"31"},{"size":1278,"mtime":1679682589606,"results":"50","hashOfConfig":"31"},{"size":5317,"mtime":1679701129030,"results":"51","hashOfConfig":"31"},{"size":5288,"mtime":1679701135795,"results":"52","hashOfConfig":"31"},{"size":2930,"mtime":1679699055917,"results":"53","hashOfConfig":"31"},{"size":12332,"mtime":1679701228957,"results":"54","hashOfConfig":"31"},{"size":1248,"mtime":1679425465394,"results":"55","hashOfConfig":"31"},{"size":1289,"mtime":1679738047040,"results":"56","hashOfConfig":"31"},{"size":3023,"mtime":1679738056802,"results":"57","hashOfConfig":"31"},{"size":2225,"mtime":1679425465381,"results":"58","hashOfConfig":"31"},{"size":388,"mtime":1679425465395,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"171ixjj",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Sparsh\\Projects\\DevConnector\\client\\src\\App.js",[],"D:\\Sparsh\\Projects\\DevConnector\\client\\src\\components\\layout\\Alert.js",[],["125","126"],"D:\\Sparsh\\Projects\\DevConnector\\client\\src\\components\\auth\\Register.js",[],["127","128"],"D:\\Sparsh\\Projects\\DevConnector\\client\\src\\utils\\setAuthToken.js",[],["129","130"],"D:\\Sparsh\\Projects\\DevConnector\\client\\src\\components\\routing\\PrivateRoute.js",[],"D:\\Sparsh\\Projects\\DevConnector\\client\\src\\components\\dashboard\\DashboardActions.js",[],"D:\\Sparsh\\Projects\\DevConnector\\client\\src\\components\\profile\\ProfileAbout.js",[],"D:\\Sparsh\\Projects\\DevConnector\\client\\src\\components\\post\\CommentForm.js",[],["131","132"],"D:\\Sparsh\\Projects\\DevConnector\\client\\src\\reducers\\post.js",["133"],"D:\\Sparsh\\Projects\\DevConnector\\client\\src\\components\\layout\\Navbar.js",[],"D:\\Sparsh\\Projects\\DevConnector\\client\\src\\actions\\post.js",["134","135"],"D:\\Sparsh\\Projects\\DevConnector\\client\\src\\actions\\profile.js",["136"],"import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n    GET_PROFILE,\n    PROFILE_ERROR,\n    UPDATE_PROFILE,\n    CLEAR_PROFILE,\n    ACCOUNT_DELETED,\n    GET_PROFILES,\n    GET_REPOS,\n} from './types';\n\n//get current user profile\nexport const getCurrentProfile = () => async (dispatch) => {\n    try {\n        const res = await axios.get('/api/profile/me');\n\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data,\n        });\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status,\n            },\n        });\n    }\n};\n\n//get all profiles\nexport const getProfiles = () => async (dispatch) => {\n    dispatch({ type: CLEAR_PROFILE });\n    try {\n        const res = await axios.get('/api/profile');\n\n        dispatch({\n            type: GET_PROFILES,\n            payload: res.data,\n        });\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status,\n            },\n        });\n    }\n};\n\n//get profile by user id\nexport const getProfileById = (userId) => async (dispatch) => {\n    try {\n        const res = await axios.get(`/api/profile/user/${userId}`);\n\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data,\n        });\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status,\n            },\n        });\n    }\n};\n\n//get Github Repos\nexport const getGithubRepos = (username) => async (dispatch) => {\n    try {\n        const res = await axios.get(`/api/profile/github/${username}`);\n\n        dispatch({\n            type: GET_REPOS,\n            payload: res.data,\n        });\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status,\n            },\n        });\n    }\n};\n\n//create or update profile\nexport const createProfile = (formData, history, edit = false) => async (\n    dispatch\n) => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n\n        const res = await axios.post('/api/profile', formData, config);\n\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data,\n        });\n\n        dispatch(\n            setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success')\n        );\n\n        if (!edit) {\n            history.push('/dashboard');\n        }\n    } catch (err) {\n        const errors = err.response.data.errors;\n        if (errors) {\n            errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n        }\n\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status,\n            },\n        });\n    }\n};\n\n//Add Experience\nexport const addExperience = (formData, history) => async (dispatch) => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n\n        const res = await axios.put(\n            '/api/profile/experience',\n            formData,\n            config\n        );\n\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data,\n        });\n\n        dispatch(setAlert('Experience Added', 'success'));\n        history.push('/dashboard');\n    } catch (err) {\n        const errors = err.response.data.errors;\n        if (errors) {\n            errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n        }\n\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status,\n            },\n        });\n    }\n};\n\n//Add Education\nexport const addEducation = (formData, history) => async (dispatch) => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n\n        const res = await axios.put('/api/profile/education', formData, config);\n\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data,\n        });\n\n        dispatch(setAlert('Education Added', 'success'));\n        history.push('/dashboard');\n    } catch (err) {\n        const errors = err.response.data.errors;\n        if (errors) {\n            errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n        }\n\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status,\n            },\n        });\n    }\n};\n\n//Delete Experience\nexport const deleteExperience = (id) => async (dispatch) => {\n    try {\n        const res = await axios.delete(`api/profile/experience/${id}`);\n\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data,\n        });\n        dispatch(setAlert('Experience Removed', 'success'));\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status,\n            },\n        });\n    }\n};\n\n//Delete Education\nexport const deleteEducation = (id) => async (dispatch) => {\n    try {\n        const res = await axios.delete(`api/profile/education/${id}`);\n\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data,\n        });\n        dispatch(setAlert('Education Removed', 'success'));\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status,\n            },\n        });\n    }\n};\n\n//Delete Account & profile\nexport const deleteAccount = (id) => async (dispatch) => {\n    if (window.confirm('Are you sure? This can NOT be undone!')) {\n        try {\n            const res = await axios.delete('api/profile');\n\n            dispatch({ type: CLEAR_PROFILE });\n            dispatch({ type: ACCOUNT_DELETED });\n            dispatch(setAlert('Your account has been permanently deleted'));\n        } catch (err) {\n            dispatch({\n                type: PROFILE_ERROR,\n                payload: {\n                    msg: err.response.statusText,\n                    status: err.response.status,\n                },\n            });\n        }\n    }\n};\n","D:\\Sparsh\\Projects\\DevConnector\\client\\src\\index.js",[],"D:\\Sparsh\\Projects\\DevConnector\\client\\src\\components\\profile-forms\\CreateProfile.js",[],["137","138"],"D:\\Sparsh\\Projects\\DevConnector\\client\\src\\components\\post\\CommentItem.js",["139"],"D:\\Sparsh\\Projects\\DevConnector\\client\\src\\components\\dashboard\\Education.js",[],"D:\\Sparsh\\Projects\\DevConnector\\client\\src\\components\\auth\\Login.js",[],"D:\\Sparsh\\Projects\\DevConnector\\client\\src\\components\\profiles\\Profiles.js",["140"],"D:\\Sparsh\\Projects\\DevConnector\\client\\src\\components\\layout\\Landing.js",[],"D:\\Sparsh\\Projects\\DevConnector\\client\\src\\components\\profiles\\ProfileItem.js",[],"D:\\Sparsh\\Projects\\DevConnector\\client\\src\\components\\profile-forms\\AddEducation.js",[],"D:\\Sparsh\\Projects\\DevConnector\\client\\src\\components\\profile-forms\\AddExperience.js",[],"D:\\Sparsh\\Projects\\DevConnector\\client\\src\\components\\profile\\ProfileTop.js",[],"D:\\Sparsh\\Projects\\DevConnector\\client\\src\\components\\profile-forms\\EditProfile.js",["141"],"import React, { Fragment, useState, useEffect } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport editProfile from '../../img/editProfile2.jpg';\n\nconst EditProfile = ({\n    profile: { profile, loading },\n    createProfile,\n    getCurrentProfile,\n    history,\n}) => {\n    const [formData, setFormData] = useState({\n        company: '',\n        website: '',\n        location: '',\n        status: '',\n        skills: '',\n        githubusername: '',\n        bio: '',\n        twitter: '',\n        facebook: '',\n        linkedin: '',\n        youtube: '',\n        instagram: '',\n    });\n    const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n    useEffect(() => {\n        getCurrentProfile();\n        setFormData({\n            company: loading || !profile.company ? '' : profile.company,\n            website: loading || !profile.website ? '' : profile.website,\n            location: loading || !profile.location ? '' : profile.location,\n            status: loading || !profile.status ? '' : profile.status,\n            skills: loading || !profile.skills ? '' : profile.skills.join(','),\n            githubusername:\n                loading || !profile.githubusername\n                    ? ''\n                    : profile.githubusername,\n            bio: loading || !profile.bio ? '' : profile.bio,\n            twitter: loading || !profile.social ? '' : profile.social.twitter,\n            facebook: loading || !profile.social ? '' : profile.social.facebook,\n            linkedin: loading || !profile.social ? '' : profile.social.linkedin,\n            youtube: loading || !profile.social ? '' : profile.social.youtube,\n            instagram:\n                loading || !profile.social ? '' : profile.social.instagram,\n        });\n    }, [loading]);\n\n    const {\n        company,\n        website,\n        location,\n        status,\n        skills,\n        githubusername,\n        bio,\n        twitter,\n        facebook,\n        linkedin,\n        youtube,\n        instagram,\n    } = formData;\n\n    const onChange = (e) =>\n        setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        createProfile(formData, history, true);\n    };\n    return (\n        <Fragment>\n            <h1 className='large text-primary'>Create Your Profile</h1>\n            <p className='lead'>\n                <i className='fa fa-user'></i> Let's get some information to\n                make your profile stand out\n            </p>\n            <div className='d-flex'>\n                <div className='form-div2'>\n                    <small>* = required field</small>\n                    <form className='form' onSubmit={(e) => onSubmit(e)}>\n                        <div className='form-group'>\n                            <select\n                                name='status'\n                                value={status}\n                                onChange={(e) => onChange(e)}\n                            >\n                                <option value='0'>* Select Professional Status</option>\n                                <option value='Developer'>Developer</option>\n                                <option value='Junior Developer'>\n                                    Junior Developer\n                                </option>\n                                <option value='Senior Developer'>\n                                    Senior Developer\n                                </option>\n                                <option value='Manager'>Manager</option>\n                                <option value='Student or Learning'>\n                                    Student or Learning\n                                </option>\n                                <option value='Instructor'>\n                                    Instructor or Teacher\n                                </option>\n                                <option value='Intern'>Intern</option>\n                                <option value='Other'>Other</option>\n                            </select>\n                            <small className='form-text'>\n                                Give us an idea of where you are at in your career\n                            </small>\n                        </div>\n                        <div className='form-group'>\n                            <input\n                                type='text'\n                                placeholder='Company'\n                                name='company'\n                                value={company}\n                                onChange={(e) => onChange(e)}\n                            />\n                            <small className='form-text'>\n                                Could be your own company or one you work for\n                            </small>\n                        </div>\n                        <div className='form-group'>\n                            <input\n                                type='text'\n                                placeholder='Website'\n                                name='website'\n                                value={website}\n                                onChange={(e) => onChange(e)}\n                            />\n                            <small className='form-text'>\n                                Could be your own or a company website\n                            </small>\n                        </div>\n                        <div className='form-group'>\n                            <input\n                                type='text'\n                                placeholder='Location'\n                                name='location'\n                                value={location}\n                                onChange={(e) => onChange(e)}\n                            />\n                            <small className='form-text'>\n                                City & state suggested (eg. Boston, MA)\n                            </small>\n                        </div>\n                        <div className='form-group'>\n                            <input\n                                type='text'\n                                placeholder='* Skills'\n                                name='skills'\n                                value={skills}\n                                onChange={(e) => onChange(e)}\n                            />\n                            <small className='form-text'>\n                                Please use comma separated values (eg.\n                                HTML,CSS,JavaScript,PHP)\n                            </small>\n                        </div>\n                        <div className='form-group'>\n                            <input\n                                type='text'\n                                placeholder='Github Username'\n                                name='githubusername'\n                                value={githubusername}\n                                onChange={(e) => onChange(e)}\n                            />\n                            <small className='form-text'>\n                                If you want your latest repos and a Github link, include\n                                your username\n                            </small>\n                        </div>\n                        <div className='form-group'>\n                            <textarea\n                                placeholder='A short bio of yourself'\n                                name='bio'\n                                value={bio}\n                                onChange={(e) => onChange(e)}\n                            ></textarea>\n                            <small className='form-text'>\n                                Tell us a little about yourself\n                            </small>\n                        </div>\n\n                        <div className='my-2'>\n                            <button\n                                onClick={() => toggleSocialInputs(!displaySocialInputs)}\n                                type='button'\n                                className='btn btn-light'\n                            >\n                                Add Social Network Links\n                            </button>\n                            <span>Optional</span>\n                        </div>\n\n                        {displaySocialInputs && (\n                            <Fragment>\n                                <div className='form-group social-input'>\n                                    <i className='fa fa-twitter fa-2x'></i>\n                                    <input\n                                        type='text'\n                                        placeholder='Twitter URL'\n                                        name='twitter'\n                                        value={twitter}\n                                        onChange={(e) => onChange(e)}\n                                    />\n                                </div>\n\n                                <div className='form-group social-input'>\n                                    <i className='fa fa-facebook fa-2x'></i>\n                                    <input\n                                        type='text'\n                                        placeholder='Facebook URL'\n                                        name='facebook'\n                                        value={facebook}\n                                        onChange={(e) => onChange(e)}\n                                    />\n                                </div>\n\n                                <div className='form-group social-input'>\n                                    <i className='fa fa-youtube fa-2x'></i>\n                                    <input\n                                        type='text'\n                                        placeholder='YouTube URL'\n                                        name='youtube'\n                                        value={youtube}\n                                        onChange={(e) => onChange(e)}\n                                    />\n                                </div>\n\n                                <div className='form-group social-input'>\n                                    <i className='fa fa-linkedin fa-2x'></i>\n                                    <input\n                                        type='text'\n                                        placeholder='Linkedin URL'\n                                        name='linkedin'\n                                        value={linkedin}\n                                        onChange={(e) => onChange(e)}\n                                    />\n                                </div>\n\n                                <div className='form-group social-input'>\n                                    <i className='fa fa-instagram fa-2x'></i>\n                                    <input\n                                        type='text'\n                                        placeholder='Instagram URL'\n                                        name='instagram'\n                                        value={instagram}\n                                        onChange={(e) => onChange(e)}\n                                    />\n                                </div>\n                            </Fragment>\n                        )}\n\n                        <input type='submit' className='btn btn-primary my-1' />\n                        <Link className='btn btn-light my-1' to='/dashboard'>\n                            Go Back\n                        </Link>\n                    </form>\n                </div>\n                <div style={{width: \"55%\"}} className='svg-div'>\n                    <img className='svg-img2' src={editProfile} alt='edit-prfile'></img>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nEditProfile.propTypes = {\n    createProfile: PropTypes.func.isRequired,\n    getCurrentProfile: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\n    withRouter(EditProfile)\n);\n","D:\\Sparsh\\Projects\\DevConnector\\client\\src\\reducers\\profile.js",["142"],"D:\\Sparsh\\Projects\\DevConnector\\client\\src\\components\\posts\\PostForm.js",[],"D:\\Sparsh\\Projects\\DevConnector\\client\\src\\components\\posts\\PostItem.js",[],"D:\\Sparsh\\Projects\\DevConnector\\client\\src\\actions\\auth.js",[],"D:\\Sparsh\\Projects\\DevConnector\\client\\src\\store.js",[],{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"143","replacedBy":"147"},{"ruleId":"145","replacedBy":"148"},{"ruleId":"143","replacedBy":"149"},{"ruleId":"145","replacedBy":"150"},{"ruleId":"143","replacedBy":"151"},{"ruleId":"145","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":19,"column":1,"nodeType":"155","endLine":86,"endColumn":2},{"ruleId":"156","severity":1,"message":"157","line":77,"column":15,"nodeType":"158","messageId":"159","endLine":77,"endColumn":18},{"ruleId":"156","severity":1,"message":"157","line":179,"column":15,"nodeType":"158","messageId":"159","endLine":179,"endColumn":18},{"ruleId":"156","severity":1,"message":"157","line":253,"column":19,"nodeType":"158","messageId":"159","endLine":253,"endColumn":22},{"ruleId":"143","replacedBy":"160"},{"ruleId":"145","replacedBy":"161"},{"ruleId":"156","severity":1,"message":"162","line":1,"column":17,"nodeType":"158","messageId":"159","endLine":1,"endColumn":25},{"ruleId":"163","severity":1,"message":"164","line":11,"column":8,"nodeType":"165","endLine":11,"endColumn":10,"suggestions":"166"},{"ruleId":"163","severity":1,"message":"167","line":50,"column":8,"nodeType":"165","endLine":50,"endColumn":17,"suggestions":"168"},{"ruleId":"153","severity":1,"message":"154","line":18,"column":1,"nodeType":"155","endLine":57,"endColumn":2},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],["169"],["170"],["169"],["170"],["169"],["170"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar",["169"],["170"],"'Fragment' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getProfiles'. Either include it or remove the dependency array. If 'getProfiles' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["171"],"React Hook useEffect has missing dependencies: 'getCurrentProfile', 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["172"],"no-global-assign","no-unsafe-negation",{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},"Update the dependencies array to be: [getProfiles]",{"range":"177","text":"178"},"Update the dependencies array to be: [getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]",{"range":"179","text":"180"},[387,389],"[getProfiles]",[1919,1928],"[getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]"]